name: CI Governance

# **What it does**: Ensures workflows follow security and governance best practices
# **Why we have it**: Security and compliance for CI/CD infrastructure
# **Who does it impact**: Docs engineering, security team

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - '.github/actions/**'
      - '.github/workflows/ci-governance.yml'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/**'
      - '.github/actions/**'

permissions:
  contents: read
  pull-requests: write
  security-events: write

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  permissions-check:
    name: Check workflow permissions
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.repository == 'github/docs-internal' || github.repository == 'github/docs'
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for top-level permissions
        run: |
          echo "## Workflow Permissions Audit" >> $GITHUB_STEP_SUMMARY
          failed=0

          for workflow in .github/workflows/*.yml .github/workflows/*.yaml; do
            if [[ -f "$workflow" ]]; then
              if ! grep -q "^permissions:" "$workflow"; then
                echo "❌ $workflow lacks top-level permissions declaration" >> $GITHUB_STEP_SUMMARY
                echo "ERROR: $workflow lacks top-level permissions declaration"
                failed=1
              else
                echo "✅ $workflow has permissions declaration" >> $GITHUB_STEP_SUMMARY
              fi
            fi
          done

          if [ $failed -eq 1 ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All workflows must have explicit top-level \`permissions:\` declarations for security." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
      - name: Check out repo
        if: ${{ failure() }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        
      - uses: ./.github/actions/slack-alert
        if: ${{ failure() }}
        with:
          slack_channel_id: ${{ secrets.DOCS_ALERTS_SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_DOCS_BOT_TOKEN }}

  pins-check:
    name: Check action version pins
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.repository == 'github/docs-internal' || github.repository == 'github/docs'
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for unpinned action versions
        run: |
          echo "## Action Version Pins Audit" >> $GITHUB_STEP_SUMMARY
          failed=0

          # Check for @main, @master, @latest usage
          if grep -r -n -E '@(main|master|latest)' .github/workflows/ .github/actions/ || true; then
            echo "❌ Found unpinned action versions using @main, @master, or @latest" >> $GITHUB_STEP_SUMMARY
            echo "ERROR: Actions must be pinned to specific SHA or version tags for security"
            failed=1
          else
            echo "✅ All actions properly pinned to specific versions" >> $GITHUB_STEP_SUMMARY
          fi

          if [ $failed -eq 1 ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Actions should be pinned to specific SHA hashes or version tags, not branch names." >> $GITHUB_STEP_SUMMARY
            echo "Example: \`uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0\`" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
      - name: Check out repo
        if: ${{ failure() }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        
      - uses: ./.github/actions/slack-alert
        if: ${{ failure() }}
        with:
          slack_channel_id: ${{ secrets.DOCS_ALERTS_SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_DOCS_BOT_TOKEN }}

  actionlint:
    name: Lint GitHub Actions workflows
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.repository == 'github/docs-internal' || github.repository == 'github/docs'
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run actionlint
        uses: rhysd/actionlint@d4ebb206004b1f96763ee1b0c83b98b67d4a4bd4 # v1.7.4
        with:
          fail-on-error: true

      - name: Report actionlint results
        if: always()
        run: |
          echo "## ActionLint Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ All workflows passed actionlint validation" >> $GITHUB_STEP_SUMMARY
          
      - name: Check out repo
        if: ${{ failure() }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        
      - uses: ./.github/actions/slack-alert
        if: ${{ failure() }}
        with:
          slack_channel_id: ${{ secrets.DOCS_ALERTS_SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_DOCS_BOT_TOKEN }}
