name: Branch Protection Audit

# **What it does**: Audits branch protection settings to ensure security requirements are met
# **Why we have it**: Verify main branch has required protections like PR reviews, status checks
# **Who does it impact**: Security team, repository administrators

on:
  schedule:
    - cron: '20 16 * * 1' # Weekly on Monday at 16:20 UTC / 8:20 PST
  workflow_dispatch:

permissions:
  contents: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.ref }}'
  cancel-in-progress: true

jobs:
  audit-branch-protection:
    name: Audit Branch Protection
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.repository == 'github/docs-internal' || github.repository == 'github/docs'
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Audit main branch protection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Branch Protection Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Get branch protection settings
          protection=$(gh api repos/${{ github.repository }}/branches/main/protection || echo "null")

          if [[ "$protection" == "null" ]]; then
            echo "❌ **CRITICAL**: Main branch has no protection rules" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

          # Check required status checks
          required_checks=$(echo "$protection" | jq -r '.required_status_checks.checks[]?.context // empty')
          expected_checks=("CodeQL" "CI Governance" "Secrets Scanning")

          echo "### Required Status Checks" >> $GITHUB_STEP_SUMMARY
          for check in "${expected_checks[@]}"; do
            if echo "$required_checks" | grep -q "$check"; then
              echo "✅ $check - Required" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ $check - Missing" >> $GITHUB_STEP_SUMMARY
            fi
          done

          # Check other settings
          pr_required=$(echo "$protection" | jq -r '.required_pull_request_reviews != null')
          min_reviewers=$(echo "$protection" | jq -r '.required_pull_request_reviews.required_approving_review_count // 0')
          dismiss_stale=$(echo "$protection" | jq -r '.required_pull_request_reviews.dismiss_stale_reviews // false')
          restrict_pushes=$(echo "$protection" | jq -r '.restrictions != null')
          linear_history=$(echo "$protection" | jq -r '.required_linear_history.enabled // false')
          signed_commits=$(echo "$protection" | jq -r '.required_signatures.enabled // false')

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Protection Settings" >> $GITHUB_STEP_SUMMARY
          echo "- **PR Required**: $([[ "$pr_required" == "true" ]] && echo "✅ Yes" || echo "❌ No")" >> $GITHUB_STEP_SUMMARY
          echo "- **Min Reviewers**: $([[ "$min_reviewers" -ge 1 ]] && echo "✅ $min_reviewers" || echo "❌ $min_reviewers")" >> $GITHUB_STEP_SUMMARY
          echo "- **Linear History**: $([[ "$linear_history" == "true" ]] && echo "✅ Yes" || echo "❌ No")" >> $GITHUB_STEP_SUMMARY
          echo "- **Signed Commits**: $([[ "$signed_commits" == "true" ]] && echo "✅ Yes" || echo "❌ No")" >> $GITHUB_STEP_SUMMARY

          # Fail if critical settings are missing
          if [[ "$pr_required" != "true" ]] || [[ "$min_reviewers" -lt 1 ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "❌ **Branch protection settings do not meet security requirements**" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
      - name: Check out repo
        if: ${{ failure() }}
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        
      - uses: ./.github/actions/slack-alert
        if: ${{ failure() }}
        with:
          slack_channel_id: ${{ secrets.DOCS_ALERTS_SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_DOCS_BOT_TOKEN }}
